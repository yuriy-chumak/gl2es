#pragma once
#include <GLES3/gl3.h>


void (* gles_glGetIntegerv)(GLenum pname, GLint * params);
void (* gles_glDeleteRenderbuffers)(GLsizei n, const GLuint * renderbuffers);
void (* gles_glClear)(GLbitfield mask);
void (* gles_glBlendColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void (* gles_glBindBuffer)(GLenum target, GLuint buffer);
void (* gles_glAttachShader)(GLuint program, GLuint shader);
void (* gles_glActiveTexture)(GLenum texture);
void (* gles_glBindAttribLocation)(GLuint program, GLuint index, const GLchar * name);
void (* gles_glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
void (* gles_glBindFramebuffer)(GLenum target, GLuint framebuffer);
void (* gles_glBindTexture)(GLenum target, GLuint texture);
void (* gles_glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void (* gles_glBlendEquationSeparate)(GLenum modeRGB, GLenum modeA);
void (* gles_glBlendEquation)(GLenum mode);
void (* gles_glBlendFunc)(GLenum sfactor, GLenum dfactor);
void (* gles_glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid * data);
void (* gles_glBufferData)(GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage);
GLenum (* gles_glCheckFramebufferStatus)(GLenum target);
void (* gles_glCopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void (* gles_glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void (* gles_glClearDepthf)(GLclampf depth);
void (* gles_glClearColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void (* gles_glClearStencil)(GLint s);
void (* gles_glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);
void (* gles_glCompileShader)(GLuint shader);
void (* gles_glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data);
void (* gles_glCullFace)(GLenum mode);
GLuint (* gles_glCreateProgram)();
void (* gles_glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLuint (* gles_glCreateShader)(GLenum type);
void (* gles_glDeleteFramebuffers)(GLsizei n, const GLuint * framebuffers);
void (* gles_glDeleteBuffers)(GLsizei n, const GLuint * buffer);
void (* gles_glDeleteProgram)(GLuint program);
void (* gles_glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void (* gles_glDisableVertexAttribArray)(GLuint index);
void (* gles_glDepthMask)(GLboolean flag);
void (* gles_glDeleteTextures)(GLsizei n, const GLuint * textures);
void (* gles_glDeleteShader)(GLuint program);
void (* gles_glDepthFunc)(GLenum func);
void (* gles_glDetachShader)(GLuint program, GLuint shader);
void (* gles_glDepthRangef)(GLclampf zNear, GLclampf zFar);
void (* gles_glDisable)(GLenum cap);
void (* gles_glEnableVertexAttribArray)(GLuint index);
void (* gles_glDrawElements)(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices);
void (* gles_glDrawArrays)(GLenum mode, GLint first, GLsizei count);
void (* gles_glEnable)(GLenum cap);
void (* gles_glFlush)();
void (* gles_glFinish)();
void (* gles_glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void (* gles_glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void (* gles_glGenRenderbuffers)(GLsizei n, GLuint * renderbuffers);
void (* gles_glGenBuffers)(GLsizei n, GLuint * buffer);
void (* gles_glFrontFace)(GLenum mode);
void (* gles_glGenFramebuffers)(GLsizei n, GLuint * framebuffers);
void (* gles_glGenerateMipmap)(GLenum target);
void (* gles_glGenTextures)(GLsizei n, GLuint * textures);
void (* gles_glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void (* gles_glGetBufferParameteriv)(GLenum target, GLenum pname, GLint * params);
GLint (* gles_glGetAttribLocation)(GLuint program, const GLchar * name);
void (* gles_glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * obj);
void (* gles_glGetBooleanv)(GLenum pname, GLboolean * params);
void (* gles_glGetFloatv)(GLenum pname, GLfloat * params);
GLenum (* gles_glGetError)();
void (* gles_glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
void (* gles_glSampleCoverage)(GLclampf value, GLboolean invert);
void (* gles_glGetVertexAttribiv)(GLuint index, GLenum pname, GLint * params);
const GLubyte * (* gles_glGetString)(GLenum name);
void (* gles_glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void (* gles_glGetProgramiv)(GLuint program, GLenum pname, GLint * params);
void (* gles_glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void (* gles_glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint * params);
void (* gles_glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
void (* gles_glGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
void (* gles_glGetShaderiv)(GLuint shader, GLenum pname, GLint * params);
void (* gles_glGetUniformfv)(GLuint program, GLint location, GLfloat * params);
void (* gles_glGetTexParameteriv)(GLenum target, GLenum pname, GLint * params);
void (* gles_glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat * params);
GLint (* gles_glGetUniformLocation)(GLuint program, const GLchar * name);
void (* gles_glGetVertexAttribPointerv)(GLuint index, GLenum pname, GLvoid ** pointer);
void (* gles_glGetUniformiv)(GLuint program, GLint location, GLint * params);
void (* gles_glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat * params);
GLboolean (* gles_glIsTexture)(GLuint texture);
GLboolean (* gles_glIsFramebuffer)(GLuint framebuffer);
GLboolean (* gles_glIsBuffer)(GLuint buffer);
void (* gles_glHint)(GLenum target, GLenum mode);
GLboolean (* gles_glIsEnabled)(GLenum cap);
GLboolean (* gles_glIsRenderbuffer)(GLuint renderbuffer);
GLboolean (* gles_glIsProgram)(GLuint program);
GLboolean (* gles_glIsShader)(GLuint shader);
void (* gles_glPolygonOffset)(GLfloat factor, GLfloat units);
void (* gles_glLinkProgram)(GLuint program);
void (* gles_glLineWidth)(GLfloat width);
void (* gles_glPixelStorei)(GLenum pname, GLint param);
void (* gles_glReleaseShaderCompiler)();
void (* gles_glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels);
void (* gles_glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void (* gles_glUniform1f)(GLint location, GLfloat v0);
void (* gles_glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
void (* gles_glStencilFunc)(GLenum func, GLint ref, GLuint mask);
void (* gles_glShaderBinary)(GLsizei n, const GLuint * shaders, GLenum binaryformat, const GLvoid * binary, GLsizei length);
void (* gles_glScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
void (* gles_glShaderSource)(GLuint shader, GLsizei count, const GLchar * const * string, const GLint * length);
void (* gles_glStencilMask)(GLuint mask);
void (* gles_glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
void (* gles_glStencilMaskSeparate)(GLenum face, GLuint mask);
void (* gles_glTexParameterfv)(GLenum target, GLenum pname, const GLfloat * params);
void (* gles_glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
void (* gles_glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum zfail, GLenum zpass);
void (* gles_glTexParameterf)(GLenum target, GLenum pname, GLfloat param);
void (* gles_glTexParameteriv)(GLenum target, GLenum pname, const GLint * params);
void (* gles_glTexParameteri)(GLenum target, GLenum pname, GLint param);
void (* gles_glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
void (* gles_glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void (* gles_glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
void (* gles_glUniform1i)(GLint location, GLint v0);
void (* gles_glUniform1fv)(GLint location, GLsizei count, const GLfloat * value);
void (* gles_glUniform1iv)(GLint location, GLsizei count, const GLint * value);
void (* gles_glUniform2i)(GLint location, GLint v0, GLint v1);
void (* gles_glUniform2fv)(GLint location, GLsizei count, const GLfloat * value);
void (* gles_glUniform2iv)(GLint location, GLsizei count, const GLint * value);
void (* gles_glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void (* gles_glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void (* gles_glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
void (* gles_glUniform3fv)(GLint location, GLsizei count, const GLfloat * value);
void (* gles_glUniform3iv)(GLint location, GLsizei count, const GLint * value);
void (* gles_glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void (* gles_glUniform4fv)(GLint location, GLsizei count, const GLfloat * value);
void (* gles_glUniform4iv)(GLint location, GLsizei count, const GLint * value);
void (* gles_glValidateProgram)(GLuint program);
void (* gles_glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void (* gles_glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void (* gles_glUseProgram)(GLuint program);
void (* gles_glVertexAttrib2fv)(GLuint index, const GLfloat * v);
void (* gles_glVertexAttrib1fv)(GLuint index, const GLfloat * v);
void (* gles_glVertexAttrib1f)(GLuint index, GLfloat x);
void (* gles_glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
void (* gles_glVertexAttrib3fv)(GLuint index, const GLfloat * v);
void (* gles_glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void (* gles_glVertexAttrib4fv)(GLuint index, const GLfloat * v);
void (* gles_glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void (* gles_glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
void (* gles_glViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
